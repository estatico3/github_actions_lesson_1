// Mocks generated by Mockito 5.0.15 from annotations
// in test_course/test/calculator_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_course/calculator.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [Calculator].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculator extends _i1.Mock implements _i2.Calculator {
  MockCalculator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  num add(num? a, num? b) =>
      (super.noSuchMethod(Invocation.method(#add, [a, b]), returnValue: 0)
          as num);
  @override
  num subtract(num? a, num? b) =>
      (super.noSuchMethod(Invocation.method(#subtract, [a, b]), returnValue: 0)
          as num);
  @override
  num multiply(num? a, num? b) =>
      (super.noSuchMethod(Invocation.method(#multiply, [a, b]), returnValue: 0)
          as num);
  @override
  num divide(num? a, num? b) =>
      (super.noSuchMethod(Invocation.method(#divide, [a, b]), returnValue: 0)
          as num);
  @override
  _i3.Future<num> reminder(num? a, num? b) =>
      (super.noSuchMethod(Invocation.method(#reminder, [a, b]),
          returnValue: Future<num>.value(0)) as _i3.Future<num>);
  @override
  _i3.Stream<int> fibonacciSequence(int? sequenceSize) =>
      (super.noSuchMethod(Invocation.method(#fibonacciSequence, [sequenceSize]),
          returnValue: Stream<int>.empty()) as _i3.Stream<int>);
  @override
  String toString() => super.toString();
}
